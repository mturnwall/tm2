//----------------------------
// imports
//----------------------------
@import "compass/layout/grid-background";
@import "compass/utilities/general/clearfix";

@import "digitaria/layout/responsive";

//----------------------------
// variables
//----------------------------
$grid-column-width: 60px !default;
$grid-gutter-width: 20px !default;
$grid-row-spacing: 10px !default;
$grid-total-columns: 12 !default;
$grid-column-selector: grid-column- !default;
$grid-column-offset-selector: grid-column-offset- !default;

$grid-background-column-color: #eeeeee;

//----------------------------
// mixins
//----------------------------
@mixin grid-container {
  $media-current: $media-normal;
  margin: 0 auto;
  width: getGridContainerWidth();
//  @include column-grid-background($grid-total-columns, getGridColumnWidth(), getGridGutterWidth());
  @include pie-clearfix;
  @include media-small {
    background-image: none;
    padding: 0 20px;
    width: auto;
  }
  @include media-medium {
    width: getGridContainerWidth();
  //  @include column-grid-background($grid-total-columns, getGridColumnWidth(), getGridGutterWidth());
  }
  @include media-large {
    width: getGridContainerWidth();
  //  @include column-grid-background($grid-total-columns, getGridColumnWidth(), getGridGutterWidth());
  }
}

@mixin grid-row {
  $media-current: $media-normal;
  margin-bottom: $grid-row-spacing;
  margin-left: - getGridGutterWidth();
  @include pie-clearfix;
  @include media-small {
    margin-bottom: 0;
    margin-left: 0;
  }
  @include media-medium {
    margin-left: - getGridGutterWidth();
  }
  @include media-large {
    margin-left: - getGridGutterWidth();
  }
}

@mixin grid-column($id) {
  $media-current: $media-normal;
  float: left;
  margin-left: getGridGutterWidth();
  position: relative;
  width: getGridColumnWidthById($id);

  @include media-small {
    float: none;
    margin-bottom: $grid-row-spacing;
    margin-left: 0;
    @if $id == $grid-total-columns {
      width: 100%;
    } @else {
      width: auto;
    }
  }
  @include media-medium {
    margin-left: getGridGutterWidth();
    width: getGridColumnWidthById($id);
  }
  @include media-large {
    margin-left: getGridGutterWidth();
    width: getGridColumnWidthById($id);
  }
  &.fill {
    background-color: lighten($color-default, 65%);
    padding: 10px;
  }
}
@mixin grid-columns($selector:$grid-column-selector) {
  @for $i from 1 through $grid-total-columns {
    .#{$selector}#{$i} {
      @include grid-column($i);
    }
  }
}

@mixin grid-column-offset($id) {
  $media-current: $media-normal;
  margin-left: getGridOffsetWidthById($id);
  @include media-small {
    margin-left: 0;
  }
  @include media-medium {
    margin-left: getGridOffsetWidthById($id);
  }
  @include media-large {
    margin-left: getGridOffsetWidthById($id);
  }
}
@mixin grid-column-offsets($selector) {
  @for $i from 1 through $grid-total-columns - 1 {
    .#{$selector}#{$i} {
      @include grid-column-offset($i);
    }
  }
}

//----------------------------
// functions
//----------------------------
@function getGridContainerWidth() {
  @return (getGridColumnWidth() * $grid-total-columns) + (getGridGutterWidth() * ($grid-total-columns - 1));
}

@function getGridColumnWidth() {
  @if $is-responsive {
    @if $media-current == $media-medium { @return $grid-column-width - 5; }
    @if $media-current == $media-large { @return $grid-column-width + 20; }
  }
  @return $grid-column-width;
}

@function getGridGutterWidth() {
  @if $is-responsive {
    @if $media-current == $media-medium { @return 10px; }
    @if $media-current == $media-large { @return 20px; }
  }
  @return $grid-gutter-width;
}

@function getGridColumnWidthById($id) {
  @return ($id * getGridColumnWidth()) + (getGridGutterWidth() * ($id - 1));
}

@function getGridOffsetWidthById($id) {
  @return ($id * getGridColumnWidth()) + (getGridGutterWidth() * ($id + 1));
}